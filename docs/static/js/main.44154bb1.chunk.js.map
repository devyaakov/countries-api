{"version":3,"sources":["components/CountryDetails.js","components/Header.js","components/Options.js","components/Country.js","components/Resultados.js","App.js","reportWebVitals.js","index.js"],"names":["CountryDetails","back","props","closeDetails","this","country","topLevelDomain","population","region","subregion","capital","nativeName","currencies","languages","flag","name","borders","className","onClick","src","alt","join","map","cu","la","bo","Component","Header","changeTheme","Options","change","e","preventDefault","value","target","changeSelection","keyPress","charCode","filterCountry","type","placeholder","onKeyPress","onChange","Country","selectCountry","openDetails","Resultados","obtenerCountries","countries","length","Fragment","numericCode","App","filterCountriesTmp","isFilter","filterCountries","setState","state","filter","c","toUpperCase","includes","document","querySelector","classList","toggle","contains","innerHTML","getCountriesByRegion","getCountriesAll","fetch","then","response","json","data","url","selectedCountry","showDetails","theme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.44154bb1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass CountryDetails extends Component{\r\n\r\n    back = ()=>{\r\n        this.props.closeDetails();\r\n    }\r\n\r\n    render(){\r\n        \r\n        const {topLevelDomain, population, region, subregion, capital, nativeName, currencies, languages, flag, name, borders} = this.props.country;\r\n\r\n        return(\r\n            <div className=\"details\">\r\n                <div className=\"back\">\r\n                    <button onClick={this.back}>Back</button>\r\n                </div>\r\n                <div className=\"info\">\r\n                    <img src={flag} alt={name} className=\"flag\"/>\r\n                    <div className=\"text\">\r\n                        <p className=\"name-country\">{name}</p>\r\n                        <div className=\"columns\">\r\n                            <div>\r\n                                <p className=\"row native-name\">{nativeName}</p>\r\n                                <p className=\"row population\">{population}</p>\r\n                                <p className=\"row region\">{region}</p>\r\n                                <p className=\"row subregion\">{subregion}</p>\r\n                                <p className=\"row capital\">{capital}</p>\r\n                            </div>\r\n                            <div>\r\n                                <p className=\"row domain\">{topLevelDomain.join()}</p>\r\n                                <p className=\"row currencies\">{currencies.map(cu => cu.name).join()}</p>\r\n                                <p className=\"row languages\">{languages.map(la => la.name).join()}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"border-countries\">{borders.map(bo => ( <div key={bo} className=\"borders\">{bo}</div>) )}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CountryDetails;","import React, {Component} from 'react';\r\n\r\nclass Header extends Component{\r\n    changeTheme = () =>{\r\n        this.props.changeTheme();\r\n    }\r\n    render(){\r\n        return (\r\n            <header>\r\n                <div>Where in the world?</div>\r\n                <div onClick={this.changeTheme} className=\"mode\">Light Mode</div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nclass Options extends Component{\r\n    \r\n    change = (e) =>{\r\n        e.preventDefault();\r\n        const value = e.target.value;\r\n\r\n        this.props.changeSelection(value);\r\n    }\r\n\r\n    keyPress = (e) =>{\r\n        if(e.charCode === 13){\r\n            const value = e.target.value;\r\n            this.props.filterCountry(value);\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"options\">\r\n                <div className=\"search\">\r\n                    <input type=\"text\" placeholder=\"Search for a country...\" onKeyPress={this.keyPress}/>\r\n                </div>\r\n                <div className=\"filter\">\r\n                    <select onChange={this.change}>\r\n                        <option value=\"\">Filter by Region</option>\r\n                        <option value=\"Africa\">Africa</option>\r\n                        <option value=\"Americas\">America</option>\r\n                        <option value=\"Asia\">Asia</option>\r\n                        <option value=\"Europe\">Europa</option>\r\n                        <option value=\"Oceania\">Oceania</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Options;","import React, { Component } from 'react';\r\n\r\nclass Country extends Component{\r\n    \r\n    selectCountry = (e)=>{\r\n        this.props.openDetails(this.props.country);\r\n    }\r\n\r\n    render(){\r\n        const { flag, population, region, capital, name  } = this.props.country;\r\n\r\n        return (\r\n            <div className=\"country\" onClick={this.selectCountry}>\r\n                <img src={flag} alt={name} className=\"country-img\"/>\r\n                <p className=\"name\">{name}</p>\r\n                <p className=\"population\">{population}</p>\r\n                <p className=\"region\">{region}</p>\r\n                <p className=\"capital\">{capital}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Country;","import React, { Component } from 'react';\r\nimport Country from './Country';\r\n\r\nclass Resultados extends Component {\r\n    obtenerCountries = () => {\r\n        const countries = this.props.countries;\r\n        if(countries.length === 0) return null;\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"countries\">\r\n                    {countries.map( country => (\r\n                        <Country key={country.numericCode } country={country} openDetails={this.props.openDetails}/>\r\n                    ))}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                {this.obtenerCountries()}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Resultados;","import { Component } from 'react';\nimport CountryDetails from './components/CountryDetails';\nimport Header from './components/Header';\nimport Options from './components/Options';\nimport Resultados from './components/Resultados';\n\n\nclass App extends Component {\n    \n    filterCountriesTmp = [];\n    isFilter = false;\n\n    constructor(props){\n        super(props);\n        this.state =  {\n            region: \"\",\n            countries: [],\n            showDetails: false,\n            selectedCountry: null,\n            theme: \"\"\n        }\n    }\n\n    componentDidMount(){\n        this.getCountriesAll();\n    }\n    \n    filterCountries = (value) => {\n        \n        if(value === \"\"){\n            this.isFilter = false;\n            this.setState({countries: this.filterCountriesTmp}, ()=>{ this.filterCountriesTmp = [] });\n        }else{\n            if(!this.isFilter)\n                this.filterCountriesTmp = this.state.countries;\n\n            let filter = this.filterCountriesTmp.filter(c => c.name.toUpperCase().includes(value.toUpperCase()));\n            \n            this.isFilter = true;\n            this.setState({countries: filter});\n        }\n        \n    }\n\n    changeTheme = () => {\n        document.querySelector('body').classList.toggle('dark');\n        if(document.querySelector('body').classList.contains('dark'))\n            document.querySelector('header .mode').innerHTML = \"Dark Mode\";\n        else\n            document.querySelector('header .mode').innerHTML = \"Light Mode\";\n    }\n\n    changeSelection = (value)=> {\n        this.setState({ region: value}, () => this.getCountriesByRegion());\n    }\n\n    getCountriesAll = () => {\n        const url = \"https://restcountries.eu/rest/v2/all\";\n\n        fetch(url).then(response => response.json()).then(data => this.setState({ countries: data }) );\n    }\n\n    getCountriesByRegion = () =>{\n        \n        const region = this.state.region;\n\n        if (region === \"\") return null;\n\n        const url = `https://restcountries.eu/rest/v2/region/${region}`;\n        \n        fetch(url).then(response => response.json()).then(data => this.setState({countries: data }));\n\n    }\n    \n    openDetails = (country)=> {\n        this.setState({selectedCountry: country},()=> this.setState({ showDetails: true}));\n    }\n\n    closeDetails = () => {\n        this.setState({showDetails: false}, ()=> this.setState({ selectedCountry: null}))\n    }\n\n    render(){\n        if(!this.state.showDetails)\n            return (\n                <div className=\"App\">\n                <Header changeTheme={this.changeTheme}/>\n                <main>\n                    <Options changeSelection={this.changeSelection} filterCountry={this.filterCountries}/>\n                    <Resultados countries={this.state.countries} openDetails={this.openDetails} />\n                </main>\n                </div>\n            );\n        else\n            return (\n                <div className=\"App\">\n                <Header changeTheme={this.changeTheme}/>\n                <main>\n                    <CountryDetails key={this.state.selectedCountry.name} country={this.state.selectedCountry} closeDetails={this.closeDetails}/>\n                </main>\n                </div>\n            );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}